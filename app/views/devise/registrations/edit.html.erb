<div class="Pro">
  <div id="block-1">
     <div class="field">
        <h2>Edit <%= resource_name.to_s.humanize %></h2>
        <%= form_for(resource, as: resource_name, url: user_registration_path, html: { method: :put }) do |f| %>
        <%= devise_error_messages! %>
        <%= f.label :email %><br />
        <%= f.email_field :email, autofocus: true, autocomplete: "email" %>

        <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
        Currently waiting confirmation for: <%= resource.unconfirmed_email %>
        <% end %>

        <%= f.label :password %> 
        <i>(leave blank if you don't want to change it)</i><br />
        <%= f.password_field :password, autocomplete: "off" %>
        <% if @minimum_password_length %>
        <br />
        <em><%= @minimum_password_length %> characters minimum</em>
        <% end %>


        <%= f.label :password_confirmation %><br />
        <%= f.password_field :password_confirmation, autocomplete: "off" %>

        <%= f.label :current_password %> <i>(we need your current password to confirm your changes)</i><br />
        <%= f.password_field :current_password, autocomplete: "off" %>

        <!-- Adding new fields for editing Chef profile -->

        <%= f.label :name %><br />
        <%= f.text_field :name, autocomplete: "off" %>
    </div>
  </div>

  <div id="block-2">
    <div class="field">
      <%= f.label :price_per_head %><br />
      <%= f.text_field :price_per_head, autocomplete: "off" %>


      <%= f.label :bio %><br />
      <%= f.text_field :bio, autocomplete: "off" %>


      <%= f.label "Will Travel (Miles)" %><br />
      <%= f.text_field :will_travel, autocomplete: "off" %>


      <%= f.label :max_party_size %><br />
      <%= f.text_field :max_party_size, autocomplete: "off" %>

      <p>Please select cuisines you cater for:</p>

      <% food_types = Cuisine.all.map { |type| [type.food, type.id] } %>
      <%= select_tag(:cuisine_ids, options_for_select(food_types)) %>      
    </div>
  </div>
  <div id="block-3">
    <h3>Click on map to set Catering Region (Uses selected radius)</h3>
    <div class="field">
      <%= f.label :location_lat %><br />
      <%= f.text_field :location_lat, autocomplete: "off", class:"lat"%>
   
      <%= f.label :location_lon %><br />
      <%= f.text_field :location_lon, autocomplete: "off", class:"lon"%>
   
      <%= f.label :radius_kilometes%><br />
      <%= f.text_field :radius, autocomplete: "off", class:"rad" %>
    </div>
    <div class="actions"><%= f.submit "Update" %></div>
    <% end %>
    <h3>Cancel my account</h3>
    <p>Unhappy? <%= button_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete %></p>
    <%= link_to "Back", :back %>
  </div>

  <div class="actions">
    <%= f.submit "Update" %>
  </div>
  <!-- <h4 class="h4"> Hello<h4> -->
<% end %>

<%= form_for current_user, html: { multipart: true } do |f| %>
  <% if current_user.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(current_user.errors.count, "error") %> prohibited this pet from being saved:</h2>

      <ul>
      <% current_user.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <div class="field">
    <%= f.label :avatar %><br>
    <%= f.file_field :avatar %>
  </div>
  <div class="actions">
    <%= f.submit "dicks" %>
  </div>
<% end %>
<h3>Cancel my account</h3>

<p>Unhappy? <%= button_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete %></p>

<%= link_to "Back", :back %>
  <div class="field">
    <div id="mapid"></div>
  </div>
</div>

<script type="text/javascript">
  var lat = document.querySelector('.lat');
  var lon = document.querySelector('.lon');
  var rad = document.querySelector('.rad');
  var circle = undefined;
  var addCircle = function (event) {
    circle = L.circle(event.latlng, {
    color: 'red',
    fillColor: '#f03',
    fillOpacity: 0.5,
    radius: rad.value*1609.34
    }).addTo(mymap);
    circle.bindPopup("Your selected catering region.");
  }
  var mymap = L.map('mapid').setView([51.505, -0.115], 8);
  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
      attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
      maxZoom: 18,
      id: 'mapbox.streets',
      accessToken: 'pk.eyJ1IjoidGhvbWFzY2FsbHVtYnJvb2siLCJhIjoiY2pnNm9hOTUxMjlyNjJ3b2gybXl2OGpvNSJ9.6FSzBSK3H6063Afj38PSIQ'
  }).addTo(mymap);
  function onMapClick(event) {
    lat.value = event.latlng.lat;
    lon.value = event.latlng.lng;
    if (circle == undefined){
      addCircle(event);
      alert("Added catering region");
    }else {
      circle.remove();
      addCircle(event);
      alert("Changed catering region");
    }
  }

  mymap.addEventListener('click', onMapClick);

  // For select cusine box:

      var expanded = false;

    function showCheckboxes() {
      var checkboxes = document.getElementById("checkboxes");
      if (!expanded) {
        checkboxes.style.display = "block";
        expanded = true;
      } else {
        checkboxes.style.display = "none";
        expanded = false;
      }
    }
</script>
